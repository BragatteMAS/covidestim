% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/covidestim.R
\name{runOptimizer}
\alias{runOptimizer}
\title{Run the Covidestim model using BFGS}
\usage{
runOptimizer(
  cc,
  cores = parallel::detectCores(),
  tries = 10,
  iter = 2000,
  timeout = 60,
  ...
)
}
\arguments{
\item{cc}{A valid \code{\link{covidestim}} configuration}

\item{cores}{A number. How many cores to use to execute runs. Multicore
execution is less important for \code{runOptimizer} than it is for
\code{\link{run}}.}

\item{tries}{The number of times to run the BFGS algorithm.}

\item{iter}{Passed to \code{\link[rstan]{optimizing}}.}

\item{timeout}{How long to let each run go for before killing it. Default 60s.}
}
\description{
In addition to NUTS sampling, you can fit the model using the BFGS algorithm.
This algorithm tries to maximize the mode of the posterior; it runs much
faster than NUTS, but won't return any confidence intervals. On
\url{covidestim.org}, BFGS is used to produce estimates for counties, and as
a fallback when NUTS fails to produce a timely and/or converged fit for state
data. Runtimes scale linearly to the value of \code{tries/cores}, but are
generally in the 30s-10min range. The same underlying model is used. Details
on the BFGS algorithm can be found on [Wikipedia](https://en.wikipedia.org/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm).
}
\details{
| Function | Method used | CI's | Speed | Termination |
| ---      | ---         |      |       |             |
| `run()`  | NUTS        | Yes  | 30m-hours | Always, potentially with warnings, of which "treedepth" and "divergent transitions" are the most serious |
| `runOptimizer()` | BFGS | No, `*.(lo|hi) == NA` | ~1-3min | Potentially with nonzero exit status (rare), or timeout (rare, gracefully handled internally)

The BFGS algorithm is run \code{tries} times using \code{tries} different
seeds derived from \code{cc$seed}. Once all runs complete, the run with the
highest value of the log-posterior is selected and returned. BFGS
occasionally gets stuck; these runs are flagged and discarded before the
ranking begins.
}
\examples{
# Note that this configuration is improper as it uses New York City
# case/death data, but uses Manhattan's FIPS code ('36061') and population size.
# (for demonstration purposes only!)
cfg <- covidestim(ndays = 120, seed = 42, region = '36061', pop_size = 1.63e6) +
  input_cases(example_nyc_data('cases')) +
  input_deaths(example_nyc_data('deaths'))

\dontrun{
result <- runOptimizer(cfg, cores = 2)
}

}
